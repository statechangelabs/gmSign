/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  CantBeEvil,
  CantBeEvilInterface,
} from "../../../../@a16z/contracts/licenses/CantBeEvil";

const _abi = [
  {
    inputs: [
      {
        internalType: "enum LicenseVersion",
        name: "_licenseVersion",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getLicenseName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLicenseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "licenseVersion",
    outputs: [
      {
        internalType: "enum LicenseVersion",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610be9380380610be98339818101604052810190610032919061008b565b806000806101000a81548160ff02191690836005811115610056576100556100b8565b5b0217905550506100e7565b600080fd5b6006811061007357600080fd5b50565b60008151905061008581610066565b92915050565b6000602082840312156100a1576100a0610061565b5b60006100af84828501610076565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b610af3806100f66000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806301ffc9a71461005157806350a5292f14610081578063a341793b1461009f578063c7db2893146100bd575b600080fd5b61006b60048036038101906100669190610682565b6100db565b60405161007891906106ca565b60405180910390f35b610089610155565b604051610096919061075c565b60405180910390f35b6100a7610166565b6040516100b49190610810565b60405180910390f35b6100c5610183565b6040516100d29190610810565b60405180910390f35b60007f649a51a8000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061014e575061014d826101eb565b5b9050919050565b60008054906101000a900460ff1681565b606061017e60008054906101000a900460ff16610255565b905090565b6060604051806060016040528060318152602001610a8d603191396101c660008054906101000a900460ff1660058111156101c1576101c06106e5565b5b6104c5565b6040516020016101d792919061086e565b604051602081830303815290604052905090565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6060600682600581111561026c5761026b6106e5565b5b60ff16111561027a57600080fd5b81600581111561028d5761028c6106e5565b5b600060058111156102a1576102a06106e5565b5b036102e3576040518060400160405280600781526020017f4342455f4343300000000000000000000000000000000000000000000000000081525090506104c0565b8160058111156102f6576102f56106e5565b5b6001600581111561030a576103096106e5565b5b0361034c576040518060400160405280600781526020017f4342455f4543520000000000000000000000000000000000000000000000000081525090506104c0565b81600581111561035f5761035e6106e5565b5b60026005811115610373576103726106e5565b5b036103b5576040518060400160405280600881526020017f4342455f4e45435200000000000000000000000000000000000000000000000081525090506104c0565b8160058111156103c8576103c76106e5565b5b600360058111156103dc576103db6106e5565b5b0361041e576040518060400160405280600b81526020017f4342455f4e4543525f485300000000000000000000000000000000000000000081525090506104c0565b816005811115610431576104306106e5565b5b60046005811115610445576104446106e5565b5b03610487576040518060400160405280600681526020017f4342455f5052000000000000000000000000000000000000000000000000000081525090506104c0565b6040518060400160405280600981526020017f4342455f50525f4853000000000000000000000000000000000000000000000081525090505b919050565b60606000820361050c576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050610620565b600082905060005b6000821461053e578080610527906108cb565b915050600a826105379190610942565b9150610514565b60008167ffffffffffffffff81111561055a57610559610973565b5b6040519080825280601f01601f19166020018201604052801561058c5781602001600182028036833780820191505090505b5090505b60008514610619576001826105a591906109a2565b9150600a856105b491906109d6565b60306105c09190610a07565b60f81b8183815181106105d6576105d5610a5d565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856106129190610942565b9450610590565b8093505050505b919050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61065f8161062a565b811461066a57600080fd5b50565b60008135905061067c81610656565b92915050565b60006020828403121561069857610697610625565b5b60006106a68482850161066d565b91505092915050565b60008115159050919050565b6106c4816106af565b82525050565b60006020820190506106df60008301846106bb565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60068110610725576107246106e5565b5b50565b600081905061073682610714565b919050565b600061074682610728565b9050919050565b6107568161073b565b82525050565b6000602082019050610771600083018461074d565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156107b1578082015181840152602081019050610796565b838111156107c0576000848401525b50505050565b6000601f19601f8301169050919050565b60006107e282610777565b6107ec8185610782565b93506107fc818560208601610793565b610805816107c6565b840191505092915050565b6000602082019050818103600083015261082a81846107d7565b905092915050565b600081905092915050565b600061084882610777565b6108528185610832565b9350610862818560208601610793565b80840191505092915050565b600061087a828561083d565b9150610886828461083d565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b60006108d6826108c1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361090857610907610892565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061094d826108c1565b9150610958836108c1565b92508261096857610967610913565b5b828204905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006109ad826108c1565b91506109b8836108c1565b9250828210156109cb576109ca610892565b5b828203905092915050565b60006109e1826108c1565b91506109ec836108c1565b9250826109fc576109fb610913565b5b828206905092915050565b6000610a12826108c1565b9150610a1d836108c1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a5257610a51610892565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfe61723a2f2f5f44396b4e3157724e576243713535425341475262544234625333763851415054596d42546853625833412fa2646970667358221220265afd3092b75a31f6ab78df1ce803cb75ab39195e89b58748cca55d69f4156664736f6c634300080d0033";

type CantBeEvilConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CantBeEvilConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CantBeEvil__factory extends ContractFactory {
  constructor(...args: CantBeEvilConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _licenseVersion: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CantBeEvil> {
    return super.deploy(
      _licenseVersion,
      overrides || {}
    ) as Promise<CantBeEvil>;
  }
  override getDeployTransaction(
    _licenseVersion: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_licenseVersion, overrides || {});
  }
  override attach(address: string): CantBeEvil {
    return super.attach(address) as CantBeEvil;
  }
  override connect(signer: Signer): CantBeEvil__factory {
    return super.connect(signer) as CantBeEvil__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CantBeEvilInterface {
    return new utils.Interface(_abi) as CantBeEvilInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CantBeEvil {
    return new Contract(address, _abi, signerOrProvider) as CantBeEvil;
  }
}
